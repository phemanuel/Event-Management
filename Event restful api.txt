EVENT MANAGEMENT RESFUL API

- Create a laravel project
	-composer create-project --prefer-dist laravel/laravel event-management "10.*"
- Configure .env file to establish connection with database
- Run migration : php artisan migrate
- Create Model for Event and Attendee with Migration file
	- php artisan make:model Event -m
	- php artisan make:model Attendee -m
- Create controller for Event and Attendee 
	- php artisan make:controller Api/AttendeeController --api
	- php artisan make:controller Api/EventController --api
- Edit Event schemma
	Schema::create('events', function (Blueprint $table) {
            $table->id();
            $table->foreignIdFor(User::class);
            $table->string('name');
            $table->text('description')->nullable();
            $table->datetime('start_time');
            $table->datetime('end_time');
            $table->timestamps();
        });
- Edit Attendee Schema	
	Schema::create('attendees', function (Blueprint $table) {
            $table->id();
            $table->foreignIdFor(User::class);
            $table->foreignIdFor(Event::class);
            $table->timestamps();
        });
- Edit Event Model	
	 public function user() : BelongsTo
    {
        return $this->belongsTo(User::class);
    }

    public function attendees() : HasMany
    {
        return $this->hasMany(Attendee::class);
    }
- Edit Attendee Model 
	public function user() : BelongsTo
    {
        return $this->belongsTo(User::class);
    }

    public function event() : BelongsTo
    {
        return $this->belongsTo(Event::class);
    }
-User Factory and Seeders
	- Create event factory : php artisan make:factory EventFactory --model=Event
	- Create event seeder : php artisan make:seeder EventSeeder
	- Create attendee seeder : php artisan make:seeder AttendeeSeeder
- Edit Event factory
	return [
            //
            'name' => fake()->unique()->sentence(3),
            'description' => fake()->text,
            'start_time' => fake()->dateTimeBetween('now','+1 month'),
            'end_time' => fake()->dateTimeBetween('+1 month', '+2 months'),
        ];
- Edit Event Seeders
	$users = User::all();

        for($i = 0; $i < 200; $i++) {
            $user = $users->random();
            App\Models\Event::factory()->create([
                'user_id' => $user->id
            ]);
        }
		
- Edit Ateendee Seeders
	$users = \App\Models\User::all();
        $events = \App\Models\Event::all();

        foreach ($users as $user) {
            $eventsToAttend = $events->random(rand(1,3));

            foreach ($eventsToAttend as $event){
                \App\Models\Attendee::create([
                    'user_id' => $user->id,
                    'event_id' => $event->id
                ]);
            }
        }
		
- Run migration  : php artisan migrate:refresh --seed